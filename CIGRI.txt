Hypotheses cote cluster:
- acces a une grappe en temps que user non privilegie (user cigri)
- pas d'acces direct aux noeuds, passage par le qsub local obligatoire
- pas de modification profonde du systeme de batch
- pas de modification profonde du comportement du cluster (jobs best effort)
Hypotheses cote CIGRI:
- pool de jobs parametriques, tolerant aux pannes

Solution 1:
- Proposition:
FIX ME

Solution 2:
- Proposition:
cigri accede aux noeuds du cluster via le qsub local, mais les jobs lances sont wrappes dans un meta-job qui assure le best-effort (ce meta job est independant des jobs):
Ce wrapper detecte continuellement si le cluster se charge et stoppe les jobs bet-effort en cours le cas echeant.
La fonction de detection est fournie sous forme de module.
La fonction de stoppage tue simplement tous les processus du user cigri sur le noeud concerne
- Pros:
on ne touche pas au scheduler.
les jobs cigri sont geres (monitores) normalement dans le batch scheduler
- Cons:
Le scheduling est perturbe par les jobs, temps que ceux-ci ne se sont pas auto-detruits, le scheduler ne peut pas faire son boulot.
Difficile de fonctionner a grain fin, stoppe-t'on les jobs best effort sur tous les neouds, ou bien est-on capable de savoir sur quel noeud cela est necessaire ?
Un fonction de detection peut etre facilement developpee dans le cas de scheduling simple (fifo par ex), mais tres difficilement dans des cas complexes.


Solution 3:
- Proposition:
Comme dans la solution 2 on utilise un meta-job (wrapper de job), mais il retourne imediatement, laissant les jobs reels s'executer en tache de fond. Tout job best effort est stoppe immediatement au lancement d'un job normal, via le prologue.
- Pros: 
le scheduling n'est pas perturbe
- Cons
Le systeme de batch ne suit pas les jobs best effort, cela doit donc etre realise pas un autre module. Necessite de maintenir une correlation forte entre le nombre de jobs executables (obtenu via le qstat local) et le nombre de job best effort s'executant deja, avec un control des ressources stricte afin de ne pas provoquer une utilisation double d'une ressource: une fois qu'une serie de job best effort est lancee, comment s'assurer qu'une deuxieme serie ne s'executera que sur des noeuds nouvellement disponibles, et pas sur des noeuds deja utilises par la premiere serie.
Necessite de demander la modification du prologue.
